{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2025-03-23T06:14:17.368532Z", "invocation_id": "69b53613-7928-4c22-9161-8dc314269530", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.331041Z", "completed_at": "2025-03-23T06:14:16.349188Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.350199Z", "completed_at": "2025-03-23T06:14:16.350199Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02116227149963379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Categories", "compiled": true, "compiled_code": "SELECT *  FROM Northwind.dbo.Categories\r\nWHERE CategoryID IS NOT NULL", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Categories\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.359199Z", "completed_at": "2025-03-23T06:14:16.364717Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.365718Z", "completed_at": "2025-03-23T06:14:16.365718Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013519763946533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Customers", "compiled": true, "compiled_code": "select * from Northwind.dbo.Customers\r\nWHERE CustomerID is not null", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Customers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.371093Z", "completed_at": "2025-03-23T06:14:16.403610Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.404609Z", "completed_at": "2025-03-23T06:14:16.404609Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03689241409301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.DimDate", "compiled": true, "compiled_code": "", "relation_name": "\"DBNRemitproDemo\".\"northwind\".\"DimDate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.407609Z", "completed_at": "2025-03-23T06:14:16.414981Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.415980Z", "completed_at": "2025-03-23T06:14:16.415980Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009370803833007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Employees", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.Employees\r\nWHERE EmployeeID IS NOT NULL", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Employees\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.419255Z", "completed_at": "2025-03-23T06:14:16.425256Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.426764Z", "completed_at": "2025-03-23T06:14:16.426764Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008506536483764648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.OrderDetails", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.OrderDetails", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"OrderDetails\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.429773Z", "completed_at": "2025-03-23T06:14:16.434109Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.435117Z", "completed_at": "2025-03-23T06:14:16.435117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0063440799713134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Orders", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.Orders", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Orders\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.438116Z", "completed_at": "2025-03-23T06:14:16.443130Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.444117Z", "completed_at": "2025-03-23T06:14:16.444117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00600123405456543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Products", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.Products\r\nWHERE ProductID IS NOT NULL", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Products\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.446117Z", "completed_at": "2025-03-23T06:14:16.450120Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.450120Z", "completed_at": "2025-03-23T06:14:16.450120Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00637054443359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Region", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.Region", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Region\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.455428Z", "completed_at": "2025-03-23T06:14:16.458574Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.460105Z", "completed_at": "2025-03-23T06:14:16.460105Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065746307373046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.Suppliers", "compiled": true, "compiled_code": "SELECT * FROM Northwind.dbo.Suppliers", "relation_name": "\"DBNRemitproDemo\".\"staging\".\"Suppliers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.461644Z", "completed_at": "2025-03-23T06:14:16.510505Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.511598Z", "completed_at": "2025-03-23T06:14:16.511598Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.049954891204833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metric_name\n\n,\n                \n        cast(123456789.99 as FLOAT) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as source_value\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as bucket_start\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as bucket_end\n\n,\n                \n        cast(123456789 as INT) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dimension\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metric_properties\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "\"Elementary\".\"elementary\".\"data_monitoring_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.514615Z", "completed_at": "2025-03-23T06:14:16.531136Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.532132Z", "completed_at": "2025-03-23T06:14:16.532132Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018520832061767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_columns\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.535131Z", "completed_at": "2025-03-23T06:14:16.554131Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.555133Z", "completed_at": "2025-03-23T06:14:16.555133Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021000385284423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as maturity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as raw_queries\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_exposures\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.558213Z", "completed_at": "2025-03-23T06:14:16.584324Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.585223Z", "completed_at": "2025-03-23T06:14:16.585223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029086589813232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as command\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as vars\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_database\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_profile_name\n\n,\n                \n        cast(123456789 as INT) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as project_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as project_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as env\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as env_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as cause\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as job_url\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as account_id\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_invocations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.588675Z", "completed_at": "2025-03-23T06:14:16.608198Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.609204Z", "completed_at": "2025-03-23T06:14:16.609204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021541833877563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as label\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as model\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as sql\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.612211Z", "completed_at": "2025-03-23T06:14:16.631720Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.631720Z", "completed_at": "2025-03-23T06:14:16.631720Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020519495010375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_models\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.634717Z", "completed_at": "2025-03-23T06:14:16.656718Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.657719Z", "completed_at": "2025-03-23T06:14:16.657719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024000883102416992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as message\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as resource_type\n\n,\n                \n        cast(123456789.99 as FLOAT) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as query_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as adapter_response\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.659832Z", "completed_at": "2025-03-23T06:14:16.678301Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.678301Z", "completed_at": "2025-03-23T06:14:16.678301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01958298683166504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_seeds\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.681831Z", "completed_at": "2025-03-23T06:14:16.698373Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.700375Z", "completed_at": "2025-03-23T06:14:16.700375Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01954364776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_snapshots\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.703378Z", "completed_at": "2025-03-23T06:14:16.719379Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.720381Z", "completed_at": "2025-03-23T06:14:16.720381Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019003629684448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n,\n                \n        cast(123456789.99 as FLOAT) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as filter\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "\"Elementary\".\"elementary\".\"dbt_source_freshness_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.723387Z", "completed_at": "2025-03-23T06:14:16.743900Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.745390Z", "completed_at": "2025-03-23T06:14:16.745390Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02300715446472168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as source_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as identifier\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_sources\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.747997Z", "completed_at": "2025-03-23T06:14:16.829111Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.830108Z", "completed_at": "2025-03-23T06:14:16.830108Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08412289619445801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as short_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as severity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_params\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as quality_dimension\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.834110Z", "completed_at": "2025-03-23T06:14:16.869117Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.870117Z", "completed_at": "2025-03-23T06:14:16.870117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03701019287109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as detected_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owners\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as test_params\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as severity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "\"Elementary\".\"elementary\".\"elementary_test_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.873589Z", "completed_at": "2025-03-23T06:14:16.880800Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.881796Z", "completed_at": "2025-03-23T06:14:16.881796Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009679555892944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.12.1' as dbt_pkg_version", "relation_name": "\"Elementary\".\"elementary\".\"metadata\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.883801Z", "completed_at": "2025-03-23T06:14:16.899798Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.899798Z", "completed_at": "2025-03-23T06:14:16.899798Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017998218536376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as detected_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "relation_name": "\"Elementary\".\"elementary\".\"schema_columns_snapshot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.904800Z", "completed_at": "2025-03-23T06:14:16.921615Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.923145Z", "completed_at": "2025-03-23T06:14:16.923145Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019345998764038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.926743Z", "completed_at": "2025-03-23T06:14:16.948991Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.949508Z", "completed_at": "2025-03-23T06:14:16.949508Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02483201026916504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n\n  \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.952613Z", "completed_at": "2025-03-23T06:14:16.959084Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.959637Z", "completed_at": "2025-03-23T06:14:16.959637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008588790893554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.data_warehouse_dbt.raw_customers", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.962901Z", "completed_at": "2025-03-23T06:14:16.966782Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.967920Z", "completed_at": "2025-03-23T06:14:16.967920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006112575531005859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.data_warehouse_dbt.raw_orders", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.970775Z", "completed_at": "2025-03-23T06:14:16.973190Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.973811Z", "completed_at": "2025-03-23T06:14:16.973811Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004697084426879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.data_warehouse_dbt.raw_payments", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.976515Z", "completed_at": "2025-03-23T06:14:16.984010Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.985381Z", "completed_at": "2025-03-23T06:14:16.985381Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010325193405151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.DimCustomer", "compiled": true, "compiled_code": "\n\nSELECT\nROW_NUMBER() OVER (ORDER BY [CustomerID]) AS CustomerKey,\nCustomerID,\nCompanyName,\nContactName,\nContactTitle,\nCountry as CustomerCountry,\nRegion as CustomerRegion,\nCity as CustomerCity,\nPostalCode as CustomerPostalCode,\n'Y' as RowIsCurrent,\nGETDATE() as  RowStartDate,\n'12/31/9999' as RowEndDate,\n'Updated' as RowChangeReason\n\n FROM \"DBNRemitproDemo\".\"staging\".\"Customers\"\n\n WHERE CustomerID IS NOT NULL", "relation_name": "\"DBNRemitproDemo\".\"northwind\".\"dimcustomer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:16.988937Z", "completed_at": "2025-03-23T06:14:16.996000Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:16.996538Z", "completed_at": "2025-03-23T06:14:16.996538Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00874018669128418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.DimEmployee", "compiled": true, "compiled_code": "\n\nSELECT \nROW_NUMBER() OVER (ORDER BY [EmployeeID]) AS EmployeeKey,\nEmployeeID\n, CONCAT(LastName,' ',FirstName) as EmployeeName\n    ,Title as EmployeeTitle\n    ,'Y' as RowIsCurrent\n ,GETDATE() as  RowStartDate,\n'12/31/9999' as RowEndDate,\n'Updated' as RowChangeReason\n\nFROM \"DBNRemitproDemo\".\"staging\".\"Employees\"", "relation_name": "\"DBNRemitproDemo\".\"northwind\".\"DimEmployee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.000529Z", "completed_at": "2025-03-23T06:14:17.009094Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.010096Z", "completed_at": "2025-03-23T06:14:17.010096Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01135563850402832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.FactSales", "compiled": true, "compiled_code": "SELECT \n\n* \n\nFROM  Northwind.dbo.Orders Ord\nLEFT JOIN Northwind.dbo.Customers cus on cus.CustomerID=ord.CustomerID\nLEFT JOIN Northwind.dbo.Employees emp on emp.EmployeeID=ord.EmployeeID\nLEFT JOIN Northwind.dbo.[OrderDetails] ordd on ordd.OrderID=ord.OrderID\nLEFT JOIN Northwind.dbo.Products prod on prod.ProductID=ordd.ProductID\n\nSELECT \n\n--ProductKey\n--CustomerKey\n--EmployeeKey\n--OrderDateKey\n--ShippedDateKey\n--OrderID\n--Quantity\n--ExtendedPriceAmount\n--DiscountAmount\n--SoldAmount\n\nprod.ProductKey,\ncus.CustomerKey,\nemp.EmployeeKey,\nord.OrderDate,\nord.ShippedDate,\nord.OrderID,\nordd.Quantity,\nordd.UnitPrice as ExtendedPriceAmount,\nordd.UnitPrice * ordd.Discount as DiscountAmount,\nordd.Quantity * (1- ordd.Discount) * ordd.UnitPrice as SoldAmount\n\n\n\nFROM  \"DBNRemitproDemo\".\"staging\".\"Orders\"  Ord\nLEFT JOIN \"DBNRemitproDemo\".\"staging\".\"Customers\"  cus on cus.CustomerID=ord.CustomerID\nLEFT JOIN \"DBNRemitproDemo\".\"staging\".\"Employees\"  emp on emp.EmployeeID=ord.EmployeeID\nLEFT JOIN \"DBNRemitproDemo\".\"staging\".\"OrderDetails\"  ordd on ordd.OrderID=ord.OrderID\nLEFT JOIN \"DBNRemitproDemo\".\"staging\".\"Products\" prod on prod.ProductID=ordd.ProductID", "relation_name": "\"DBNRemitproDemo\".\"northwind\".\"FactSales\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.014103Z", "completed_at": "2025-03-23T06:14:17.022101Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.023502Z", "completed_at": "2025-03-23T06:14:17.023502Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011397600173950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.data_warehouse_dbt.DimProduct", "compiled": true, "compiled_code": "\n\nSELECT \nROW_NUMBER() OVER (ORDER BY [ProductID]) AS ProductKey\n\t,[ProductID]\n      ,[ProductName]\n      ,sup.CompanyName as  SupplierName\n      ,cat.CategoryName\n      ,[Discontinued]\n\t ,'Y' as  RowIsCurrent\n\t, GETDATE() as \tRowStartDate\n\t\t,'12/31/9999' as RowEndDate\n\t\t, 'Updated' as RowChangeReason\n  FROM  \"DBNRemitproDemo\".\"staging\".\"Products\"  p\n  JOIN \"DBNRemitproDemo\".\"staging\".\"Categories\"  cat on cat.CategoryID=p.CategoryID\n  JOIN  \"DBNRemitproDemo\".\"staging\".\"Suppliers\"     sup on sup.SupplierID=p.SupplierID", "relation_name": "\"DBNRemitproDemo\".\"northwind\".\"dimproduct\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.028023Z", "completed_at": "2025-03-23T06:14:17.062086Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.063086Z", "completed_at": "2025-03-23T06:14:17.063086Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037174224853515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"Elementary\".\"elementary\".\"data_monitoring_metrics\"\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and training_set_size >= 7\n            and bucket_end >= \n    dateadd(day, cast(-7 as INT), cast(\n    CAST(DATEADD(day, DATEDIFF(day, 0, \n    current_timestamp::timestamp\n), 0) AS DATE)\n as DATETIME2(6)))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "\"Elementary\".\"elementary\".\"metrics_anomaly_score\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.067088Z", "completed_at": "2025-03-23T06:14:17.076111Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.077109Z", "completed_at": "2025-03-23T06:14:17.077109Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012023448944091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"Elementary\".\"elementary\".\"data_monitoring_metrics\"\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "\"Elementary\".\"elementary\".\"monitors_runs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.080107Z", "completed_at": "2025-03-23T06:14:17.105555Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.107560Z", "completed_at": "2025-03-23T06:14:17.107560Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028450965881347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as DATETIME2(6)))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as DATETIME2(6)))\n as job_run_completed_at,\n    \n    datediff(\n        second,\n        \nmin(cast(run_started_at as DATETIME2(6)))\n,\n        \nmax(cast(run_completed_at as DATETIME2(6)))\n\n        )\n as job_run_execution_time\n  from \"Elementary\".\"elementary\".\"dbt_invocations\"\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "\"Elementary\".\"elementary\".\"job_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.110559Z", "completed_at": "2025-03-23T06:14:17.123563Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.123563Z", "completed_at": "2025-03-23T06:14:17.123563Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015001773834228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"Elementary\".\"elementary\".\"dbt_run_results\"\n),\n\ndbt_models as (\n    select * from \"Elementary\".\"elementary\".\"dbt_models\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as DATETIME2(6)))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as DATETIME2(6)))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "\"Elementary\".\"elementary\".\"model_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.128086Z", "completed_at": "2025-03-23T06:14:17.136584Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.137587Z", "completed_at": "2025-03-23T06:14:17.137587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012023448944091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"Elementary\".\"elementary\".\"dbt_run_results\"\n),\n\ndbt_snapshots as (\n    select * from \"Elementary\".\"elementary\".\"dbt_snapshots\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "\"Elementary\".\"elementary\".\"snapshot_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.141585Z", "completed_at": "2025-03-23T06:14:17.150859Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.152130Z", "completed_at": "2025-03-23T06:14:17.152130Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012542247772216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from \"Elementary\".\"elementary\".\"dbt_source_freshness_results\"\n),\n\nsources as (\n  select * from \"Elementary\".\"elementary\".\"dbt_sources\"\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  results.generated_at as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "\"Elementary\".\"elementary\".\"alerts_dbt_source_freshness\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.156203Z", "completed_at": "2025-03-23T06:14:17.240721Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.241721Z", "completed_at": "2025-03-23T06:14:17.241721Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08854079246520996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.information_schema_columns", "compiled": true, "compiled_code": "\n\n    \n  \n    \n  \n\n  with dbt_models_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from \"Elementary\".\"elementary\".\"dbt_models\"\n  ),\n\n  dbt_snapshots_data as (\n      select\n          database_name,\n          schema_name,\n          alias as table_name\n      from \"Elementary\".\"elementary\".\"dbt_snapshots\"\n  ),\n\n  dbt_sources_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from \"Elementary\".\"elementary\".\"dbt_sources\"\n  ),\n\n  dbt_seeds_data as (\n      select\n          database_name,\n          schema_name,\n          name as table_name\n      from \"Elementary\".\"elementary\".\"dbt_seeds\"\n  ),\n\n  tables_information as (\n      select * from dbt_models_data\n      union all\n      select * from dbt_sources_data\n      union all\n      select * from dbt_snapshots_data\n      union all\n      select * from dbt_seeds_data\n  ),\n\n  columns_information as (\n      \n    \n    \n    \n        (\n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from \"Northwind\".INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('dbo')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from \"DBNRemitproDemo\".INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('northwind')\n    \n)\n        \n            union all\n        \n    \n        (\n    \n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from \"DBNRemitproDemo\".INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('staging')\n    \n)\n        \n    \n\n\n\n  ),\n\n  information_schema_columns as (\n      select col_info.*\n      from tables_information tbl_info\n      join columns_information col_info\n          on (lower(tbl_info.database_name) = lower(col_info.database_name) and\n              lower(tbl_info.schema_name) = lower(col_info.schema_name) and\n              lower(tbl_info.table_name) = lower(col_info.table_name)\n          )\n  )\n\n  select *\n  from information_schema_columns\n\n", "relation_name": "\"Elementary\".\"elementary\".\"information_schema_columns\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.245721Z", "completed_at": "2025-03-23T06:14:17.257721Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.257721Z", "completed_at": "2025-03-23T06:14:17.257721Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01399850845336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_models\"\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_tests\"\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_sources\"\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_snapshots\"\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_metrics\"\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_exposures\"\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_seeds\"\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom \"Elementary\".\"elementary\".\"dbt_columns\"\n\n\norder by metadata_hash", "relation_name": "\"Elementary\".\"elementary\".\"dbt_artifacts_hashes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.262719Z", "completed_at": "2025-03-23T06:14:17.276819Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.277821Z", "completed_at": "2025-03-23T06:14:17.277821Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01710200309753418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"Elementary\".\"elementary\".\"elementary_test_results\"\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "\"Elementary\".\"elementary\".\"alerts_anomaly_detection\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.280821Z", "completed_at": "2025-03-23T06:14:17.294207Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.295209Z", "completed_at": "2025-03-23T06:14:17.295209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01539158821105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"Elementary\".\"elementary\".\"elementary_test_results\"\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "\"Elementary\".\"elementary\".\"alerts_dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.299209Z", "completed_at": "2025-03-23T06:14:17.308280Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.309281Z", "completed_at": "2025-03-23T06:14:17.309281Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01107335090637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from \"Elementary\".\"elementary\".\"elementary_test_results\"\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "\"Elementary\".\"elementary\".\"alerts_schema_changes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.312278Z", "completed_at": "2025-03-23T06:14:17.322287Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.323287Z", "completed_at": "2025-03-23T06:14:17.323287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01200556755065918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "\n\n-- depends_on: \"Elementary\".\"elementary\".\"elementary_test_results\"\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar(4096)) as result_row\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as detected_at\n\n,\n                cast('2091-02-17' as DATETIME2(6)) as created_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "relation_name": "\"Elementary\".\"elementary\".\"test_result_rows\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.327285Z", "completed_at": "2025-03-23T06:14:17.340827Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.341822Z", "completed_at": "2025-03-23T06:14:17.341822Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016537904739379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from \"Elementary\".\"elementary\".\"metrics_anomaly_score\"\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "\"Elementary\".\"elementary\".\"anomaly_threshold_sensitivity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.344821Z", "completed_at": "2025-03-23T06:14:17.352822Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.353824Z", "completed_at": "2025-03-23T06:14:17.353824Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01000213623046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from \"Elementary\".\"elementary\".\"model_run_results\"\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from \"Elementary\".\"elementary\".\"snapshot_run_results\"\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       generated_at as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "\"Elementary\".\"elementary\".\"alerts_dbt_models\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-23T06:14:17.357196Z", "completed_at": "2025-03-23T06:14:17.364463Z"}, {"name": "execute", "started_at": "2025-03-23T06:14:17.365459Z", "completed_at": "2025-03-23T06:14:17.365459Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009636163711547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.enriched_columns", "compiled": true, "compiled_code": "\n\n\nwith information_schema_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(column_name) as name,\n        data_type\n    from \"Elementary\".\"elementary\".\"information_schema_columns\"\n),\n\ndbt_columns as (\n    select\n        lower(database_name) as database_name,\n        lower(schema_name) as schema_name,\n        lower(table_name) as table_name,\n        lower(name) as name,\n        description\n    from \"Elementary\".\"elementary\".\"dbt_columns\"\n)\n\nselect\n    database_name,\n    schema_name,\n    table_name,\n    name,\n    data_type,\n    description\nfrom information_schema_columns\nleft join dbt_columns using (database_name, schema_name, table_name, name)", "relation_name": "\"Elementary\".\"elementary\".\"enriched_columns\""}], "elapsed_time": 1.2238450050354004, "args": {"require_resource_names_without_spaces": false, "compile": true, "use_colors_file": true, "log_file_max_bytes": 10485760, "source_freshness_run_project_hooks": true, "indirect_selection": "eager", "introspect": true, "profiles_dir": "C:\\Users\\tabdu\\.dbt", "strict_mode": false, "empty_catalog": false, "vars": {}, "show_resource_report": false, "favor_state": false, "populate_cache": true, "print": true, "static": false, "write_json": true, "log_format_file": "debug", "log_format": "default", "select": [], "partial_parse_file_diff": true, "enable_legacy_logger": false, "use_colors": true, "log_level": "info", "log_level_file": "debug", "cache_selected_only": false, "invocation_command": "dbt docs generate", "log_path": "C:\\Users\\tabdu\\OneDrive\\Desktop\\remitproworkstation\\data-warehouse\\data_warehouse_dbt\\logs", "exclude": [], "printer_width": 80, "quiet": false, "require_explicit_package_overrides_for_builtin_materializations": false, "project_dir": "C:\\Users\\tabdu\\OneDrive\\Desktop\\remitproworkstation\\data-warehouse\\data_warehouse_dbt", "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "send_anonymous_usage_stats": true, "defer": false, "macro_debugging": false, "which": "generate", "static_parser": true, "partial_parse": true}}